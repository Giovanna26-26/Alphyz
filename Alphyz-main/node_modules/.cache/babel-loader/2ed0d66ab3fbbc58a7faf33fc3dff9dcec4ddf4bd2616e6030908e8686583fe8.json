{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Giova\\\\Downloads\\\\Alphyz\\\\Alphyz-main\\\\src\\\\pages\\\\cadastro\\\\cadastro.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../cadastro/cadastro.css\";\nimport logo from \"../../assets/logo.png\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cadastro() {\n  _s();\n  const [formData, setFormData] = useState({\n    nome: \"\",\n    telefone: \"\",\n    cep: \"\",\n    rua: \"\",\n    numero: \"\",\n    complemento: \"\",\n    estado: \"\",\n    cidade: \"\",\n    cpf: \"\",\n    email: \"\",\n    senha: \"\",\n    termos: false,\n    privacidade: false\n  });\n  const [estados, setEstados] = useState([]);\n  const [cidades, setCidades] = useState([]);\n  const [loadingEstados, setLoadingEstados] = useState(false);\n  const [loadingCidades, setLoadingCidades] = useState(false);\n  const [loadingCEP, setLoadingCEP] = useState(false);\n  const [cepErro, setCepErro] = useState(\"\");\n\n  // Fallback simples (caso a API do IBGE falhe)\n  const cidadesFallback = {\n    SP: [\"São Paulo\", \"Campinas\", \"Santos\", \"São José dos Campos\", \"Ribeirão Preto\"],\n    RJ: [\"Rio de Janeiro\", \"Niterói\", \"Petrópolis\", \"Volta Redonda\", \"Campos dos Goytacazes\"],\n    MG: [\"Belo Horizonte\", \"Uberlândia\", \"Juiz de Fora\", \"Contagem\", \"Uberaba\"],\n    ES: [\"Vitória\", \"Vila Velha\", \"Serra\", \"Cariacica\", \"Guarapari\"]\n  };\n\n  // Carrega ESTADOS (IBGE)\n  useEffect(() => {\n    const fetchEstados = async () => {\n      try {\n        setLoadingEstados(true);\n        const res = await fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome\");\n        const data = await res.json(); // [{id, sigla, nome}]\n        setEstados(data);\n      } catch {\n        // Sudeste como fallback\n        setEstados([{\n          sigla: \"ES\",\n          nome: \"Espírito Santo\"\n        }, {\n          sigla: \"MG\",\n          nome: \"Minas Gerais\"\n        }, {\n          sigla: \"RJ\",\n          nome: \"Rio de Janeiro\"\n        }, {\n          sigla: \"SP\",\n          nome: \"São Paulo\"\n        }]);\n      } finally {\n        setLoadingEstados(false);\n      }\n    };\n    fetchEstados();\n  }, []);\n\n  // Carrega CIDADES quando muda o ESTADO\n  useEffect(() => {\n    if (!formData.estado) {\n      setCidades([]);\n      return;\n    }\n    const fetchCidades = async () => {\n      try {\n        setLoadingCidades(true);\n        const res = await fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${formData.estado}/municipios?orderBy=nome`);\n        const data = await res.json(); // [{id, nome}]\n        const nomes = data.map(c => c.nome);\n        setCidades(nomes);\n\n        // Se já houver uma cidade setada (p.ex. vinda do CEP), mantém\n        // desde que exista na lista recém-carregada.\n        if (formData.cidade && !nomes.includes(formData.cidade)) {\n          setFormData(prev => ({\n            ...prev,\n            cidade: \"\"\n          }));\n        }\n      } catch {\n        const nomes = cidadesFallback[formData.estado] || [];\n        setCidades(nomes);\n      } finally {\n        setLoadingCidades(false);\n      }\n    };\n    fetchCidades();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData.estado]);\n\n  // Helpers CEP\n  const onlyDigits = v => v.replace(/\\D/g, \"\");\n  const formatCEP = v => {\n    const d = onlyDigits(v).slice(0, 8);\n    if (d.length <= 5) return d;\n    return `${d.slice(0, 5)}-${d.slice(5)}`;\n  };\n\n  // Busca CEP na ViaCEP e preenche Rua/UF/Cidade\n  const lookupCEP = async cepDigits => {\n    if (cepDigits.length !== 8) return;\n    try {\n      setLoadingCEP(true);\n      setCepErro(\"\");\n      const res = await fetch(`https://viacep.com.br/ws/${cepDigits}/json/`);\n      const data = await res.json();\n      if (data.erro) {\n        setCepErro(\"CEP não encontrado.\");\n        return;\n      }\n      const uf = data.uf || \"\";\n      const cidade = data.localidade || \"\";\n      const rua = data.logradouro || \"\";\n      setFormData(prev => ({\n        ...prev,\n        rua,\n        estado: uf,\n        cidade\n      }));\n    } catch {\n      setCepErro(\"Não foi possível buscar o CEP. Tente novamente.\");\n    } finally {\n      setLoadingCEP(false);\n    }\n  };\n\n  // Handlers\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/usuarios\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert(\"Usuário cadastrado com sucesso!\");\n        setFormData({\n          nome: \"\",\n          telefone: \"\",\n          cep: \"\",\n          rua: \"\",\n          numero: \"\",\n          complemento: \"\",\n          estado: \"\",\n          cidade: \"\",\n          cpf: \"\",\n          email: \"\",\n          senha: \"\",\n          termos: false,\n          privacidade: false\n        });\n      } else {\n        alert(\"Erro ao cadastrar usuário. Tente novamente.\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Falha ao conectar ao servidor.\");\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cadastro-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"cadastro-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Seja bem-vindo a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"alphyz\",\n        className: \"cadastro-title__logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"cadastro-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nome\",\n          value: formData.nome,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Telefone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"telefone\",\n          value: formData.telefone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CEP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cep\",\n          value: formatCEP(formData.cep),\n          onChange: handleChange,\n          onBlur: () => {\n            const d = onlyDigits(formData.cep);\n            if (d.length === 8) lookupCEP(d);\n          },\n          placeholder: \"00000-000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: `hint ${cepErro ? \"error\" : \"\"}`,\n          children: loadingCEP ? \"Buscando CEP...\" : cepErro || \"Preencha para autocompletar endereço\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rua\",\n          value: formData.rua,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"N\\xFAmero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"numero\",\n          value: formData.numero,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Complemento (Opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"complemento\",\n          value: formData.complemento,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"estado\",\n              value: formData.estado,\n              onChange: handleChange,\n              disabled: loadingEstados,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: loadingEstados ? \"Carregando...\" : \"Selecione uma opção\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), estados.map(uf => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: uf.sigla,\n                children: uf.nome\n              }, uf.sigla, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"cidade\",\n              value: formData.cidade,\n              onChange: handleChange,\n              disabled: !formData.estado || loadingCidades,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: !formData.estado ? \"Selecione um estado\" : loadingCidades ? \"Carregando...\" : \"Selecione uma opção\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), cidades.map(nome => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: nome,\n                children: nome\n              }, nome, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CPF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cpf\",\n          value: formData.cpf,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"senha\",\n          value: formData.senha,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"termos\",\n            checked: formData.termos,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirmo que li e concordo com os termos de uso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"privacidade\",\n            checked: formData.privacidade,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirmo que li e estou ciente sobre a Pol\\xEDtica de privacidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-enviar\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"voltar-login\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"J\\xE1 possuo conta (fazer login)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(Cadastro, \"/jBSxy8l5+nhJJ487mVVE5bIx9Q=\");\n_c = Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["React","useEffect","useState","logo","Link","jsxDEV","_jsxDEV","Cadastro","_s","formData","setFormData","nome","telefone","cep","rua","numero","complemento","estado","cidade","cpf","email","senha","termos","privacidade","estados","setEstados","cidades","setCidades","loadingEstados","setLoadingEstados","loadingCidades","setLoadingCidades","loadingCEP","setLoadingCEP","cepErro","setCepErro","cidadesFallback","SP","RJ","MG","ES","fetchEstados","res","fetch","data","json","sigla","fetchCidades","nomes","map","c","includes","prev","onlyDigits","v","replace","formatCEP","d","slice","length","lookupCEP","cepDigits","erro","uf","localidade","logradouro","handleSubmit","e","preventDefault","response","method","headers","body","JSON","stringify","ok","alert","err","console","error","handleChange","name","value","type","checked","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","onChange","onBlur","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/Giova/Downloads/Alphyz/Alphyz-main/src/pages/cadastro/cadastro.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../cadastro/cadastro.css\";\nimport logo from \"../../assets/logo.png\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Cadastro() {\n  const [formData, setFormData] = useState({\n    nome: \"\",\n    telefone: \"\",\n    cep: \"\",\n    rua: \"\",\n    numero: \"\",\n    complemento: \"\",\n    estado: \"\",\n    cidade: \"\",\n    cpf: \"\",\n    email: \"\",\n    senha: \"\",\n    termos: false,\n    privacidade: false,\n  });\n\n  const [estados, setEstados] = useState([]);\n  const [cidades, setCidades] = useState([]);\n\n  const [loadingEstados, setLoadingEstados] = useState(false);\n  const [loadingCidades, setLoadingCidades] = useState(false);\n  const [loadingCEP, setLoadingCEP] = useState(false);\n  const [cepErro, setCepErro] = useState(\"\");\n\n  // Fallback simples (caso a API do IBGE falhe)\n  const cidadesFallback = {\n    SP: [\"São Paulo\", \"Campinas\", \"Santos\", \"São José dos Campos\", \"Ribeirão Preto\"],\n    RJ: [\"Rio de Janeiro\", \"Niterói\", \"Petrópolis\", \"Volta Redonda\", \"Campos dos Goytacazes\"],\n    MG: [\"Belo Horizonte\", \"Uberlândia\", \"Juiz de Fora\", \"Contagem\", \"Uberaba\"],\n    ES: [\"Vitória\", \"Vila Velha\", \"Serra\", \"Cariacica\", \"Guarapari\"],\n  };\n\n  // Carrega ESTADOS (IBGE)\n  useEffect(() => {\n    const fetchEstados = async () => {\n      try {\n        setLoadingEstados(true);\n        const res = await fetch(\n          \"https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome\"\n        );\n        const data = await res.json(); // [{id, sigla, nome}]\n        setEstados(data);\n      } catch {\n        // Sudeste como fallback\n        setEstados([\n          { sigla: \"ES\", nome: \"Espírito Santo\" },\n          { sigla: \"MG\", nome: \"Minas Gerais\" },\n          { sigla: \"RJ\", nome: \"Rio de Janeiro\" },\n          { sigla: \"SP\", nome: \"São Paulo\" },\n        ]);\n      } finally {\n        setLoadingEstados(false);\n      }\n    };\n    fetchEstados();\n  }, []);\n\n  // Carrega CIDADES quando muda o ESTADO\n  useEffect(() => {\n    if (!formData.estado) {\n      setCidades([]);\n      return;\n    }\n    const fetchCidades = async () => {\n      try {\n        setLoadingCidades(true);\n        const res = await fetch(\n          `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${formData.estado}/municipios?orderBy=nome`\n        );\n        const data = await res.json(); // [{id, nome}]\n        const nomes = data.map((c) => c.nome);\n        setCidades(nomes);\n\n        // Se já houver uma cidade setada (p.ex. vinda do CEP), mantém\n        // desde que exista na lista recém-carregada.\n        if (formData.cidade && !nomes.includes(formData.cidade)) {\n          setFormData((prev) => ({ ...prev, cidade: \"\" }));\n        }\n      } catch {\n        const nomes = cidadesFallback[formData.estado] || [];\n        setCidades(nomes);\n      } finally {\n        setLoadingCidades(false);\n      }\n    };\n    fetchCidades();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData.estado]);\n\n  // Helpers CEP\n  const onlyDigits = (v) => v.replace(/\\D/g, \"\");\n  const formatCEP = (v) => {\n    const d = onlyDigits(v).slice(0, 8);\n    if (d.length <= 5) return d;\n    return `${d.slice(0, 5)}-${d.slice(5)}`;\n  };\n\n  // Busca CEP na ViaCEP e preenche Rua/UF/Cidade\n  const lookupCEP = async (cepDigits) => {\n    if (cepDigits.length !== 8) return;\n    try {\n      setLoadingCEP(true);\n      setCepErro(\"\");\n      const res = await fetch(`https://viacep.com.br/ws/${cepDigits}/json/`);\n      const data = await res.json();\n      if (data.erro) {\n        setCepErro(\"CEP não encontrado.\");\n        return;\n      }\n\n      const uf = data.uf || \"\";\n      const cidade = data.localidade || \"\";\n      const rua = data.logradouro || \"\";\n\n      setFormData((prev) => ({\n        ...prev,\n        rua,\n        estado: uf,\n        cidade,\n      }));\n\n    } catch {\n      setCepErro(\"Não foi possível buscar o CEP. Tente novamente.\");\n    } finally {\n      setLoadingCEP(false);\n    }\n  };\n\n  // Handlers\n  const handleSubmit = async (e) => {\n  e.preventDefault();\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/usuarios\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    });\n\n    if (response.ok) {\n      alert(\"Usuário cadastrado com sucesso!\");\n      setFormData({\n        nome: \"\",\n        telefone: \"\",\n        cep: \"\",\n        rua: \"\",\n        numero: \"\",\n        complemento: \"\",\n        estado: \"\",\n        cidade: \"\",\n        cpf: \"\",\n        email: \"\",\n        senha: \"\",\n        termos: false,\n        privacidade: false,\n      });\n    } else {\n      alert(\"Erro ao cadastrar usuário. Tente novamente.\");\n    }\n  } catch (err) {\n    console.error(err);\n    alert(\"Falha ao conectar ao servidor.\");\n  }\n};\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n\n  return (\n    <div className=\"cadastro-container\">\n      <h2 className=\"cadastro-title\">\n        <span>Seja bem-vindo a</span>\n        <img src={logo} alt=\"alphyz\" className=\"cadastro-title__logo\" />\n        <span>!</span>\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"cadastro-form\">\n        {/* Coluna ESQUERDA */}\n        <div className=\"col\">\n          <label>Nome completo</label>\n          <input type=\"text\" name=\"nome\" value={formData.nome} onChange={handleChange} />\n\n          <label>Telefone</label>\n          <input type=\"text\" name=\"telefone\" value={formData.telefone} onChange={handleChange} />\n\n          {/* CEP logo abaixo do telefone */}\n          <label>CEP</label>\n          <input\n            type=\"text\"\n            name=\"cep\"\n            value={formatCEP(formData.cep)}\n            onChange={handleChange}\n            onBlur={() => {\n              const d = onlyDigits(formData.cep);\n              if (d.length === 8) lookupCEP(d);\n            }}\n            placeholder=\"00000-000\"\n          />\n          <small className={`hint ${cepErro ? \"error\" : \"\"}`}>\n            {loadingCEP ? \"Buscando CEP...\" : cepErro || \"Preencha para autocompletar endereço\"}\n          </small>\n\n          <label>Rua</label>\n          <input type=\"text\" name=\"rua\" value={formData.rua} onChange={handleChange} />\n\n          <label>Número</label>\n          <input type=\"text\" name=\"numero\" value={formData.numero} onChange={handleChange} />\n\n          <label>Complemento (Opcional)</label>\n          <input\n            type=\"text\"\n            name=\"complemento\"\n            value={formData.complemento}\n            onChange={handleChange}\n          />\n        </div>\n\n        {/* Coluna DIREITA */}\n        <div className=\"col\">\n          {/* Estado e Cidade lado a lado */}\n          <div className=\"field-row\">\n            <div className=\"field\">\n              <label>Estado</label>\n              <select\n                name=\"estado\"\n                value={formData.estado}\n                onChange={handleChange}\n                disabled={loadingEstados}\n              >\n                <option value=\"\">{loadingEstados ? \"Carregando...\" : \"Selecione uma opção\"}</option>\n                {estados.map((uf) => (\n                  <option key={uf.sigla} value={uf.sigla}>\n                    {uf.nome}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"field\">\n              <label>Cidade</label>\n              <select\n                name=\"cidade\"\n                value={formData.cidade}\n                onChange={handleChange}\n                disabled={!formData.estado || loadingCidades}\n              >\n                <option value=\"\">\n                  {!formData.estado\n                    ? \"Selecione um estado\"\n                    : loadingCidades\n                    ? \"Carregando...\"\n                    : \"Selecione uma opção\"}\n                </option>\n                {cidades.map((nome) => (\n                  <option key={nome} value={nome}>\n                    {nome}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <label>CPF</label>\n          <input type=\"text\" name=\"cpf\" value={formData.cpf} onChange={handleChange} />\n\n          <label>E-mail</label>\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n\n          <label>Senha</label>\n          <input type=\"password\" name=\"senha\" value={formData.senha} onChange={handleChange} />\n\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              name=\"termos\"\n              checked={formData.termos}\n              onChange={handleChange}\n            />\n            <span>Confirmo que li e concordo com os termos de uso</span>\n          </label>\n\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              name=\"privacidade\"\n              checked={formData.privacidade}\n              onChange={handleChange}\n            />\n            <span>Confirmo que li e estou ciente sobre a Política de privacidade</span>\n          </label>\n\n          <button type=\"submit\" className=\"btn-enviar\">Enviar</button>\n\n          <p className=\"voltar-login\">\n            <Link to=\"/\">Já possuo conta (fazer login)</Link>\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}